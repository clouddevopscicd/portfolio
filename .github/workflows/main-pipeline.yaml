name: CICD pipeline with SonarCloud, Docker, Trivy, Deploy

on:
  push:
    branches: [ main, release ]
  pull_request:
    branches: [ main, release ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: docker.io/${{ vars.DOCKER_USERNAME }}

jobs:

  build-and-test:
    name: Build, Lint, Test with Matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.11, 3.12 ]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          set -e
          pip install -r requirements.txt
          pip install flake8 pytest

      - name: Lint & Unit Tests
        run: |
          set -e
          flake8 .
          pytest tests

  sonarcloud-analysis:
    name: SonarCloud Static Analysis
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=clouddevopscicd
            -Dsonar.projectKey=clouddevopscicd_portfolio
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_GITHUB_USERTOKEN }}

  docker-build-scan:
    name: Build Docker Image, Scan with Trivy, Push to Registry
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis

    steps:
      - uses: actions/checkout@v4

      - name: Install Docker & Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io wget
          sudo systemctl start docker
          wget https://github.com/aquasecurity/trivy/releases/download/v0.63.0/trivy_0.63.0_Linux-64bit.tar.gz
          tar zxvf trivy_0.63.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/
          trivy --version
          docker --version

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Scan Docker Image
        run: |
          set -e
          docker build -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .
          trivy image --severity CRITICAL,HIGH --exit-code 0 -f json -o trivy-report.json $REGISTRY/$IMAGE_NAME:${{ github.sha }}

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Push Docker Image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}

  deploy-to-vm:
    name: Deploy on RedHat VM (Manual Step Recommended)
    runs-on: ubuntu-latest
    needs: docker-build-scan

    steps:
      - name: Show Deployment Reminder
        run: |
          echo "⚠️ Deployment stage is configured for RedHat VM."
          echo "Please run docker login, pull, and run commands on your VM manually."
